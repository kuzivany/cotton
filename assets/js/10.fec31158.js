(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"migrations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#migrations"}},[t._v("#")]),t._v(" Migrations")]),t._v(" "),e("p",[t._v("The reason why we use "),e("em",[t._v("database toolkit")]),t._v(" instead of "),e("em",[t._v("ORM")]),t._v(" for our tagline is because Cotton offers more than just an ORM. We're offering a set of tools that helps you to manage your Deno apps that use a database. We want to make sure that you don't need to jump into multiple tools while developing your apps.")]),t._v(" "),e("p",[t._v("In this section, we're going to show you how to use the migrations feature in Cotton.")]),t._v(" "),e("h2",{attrs:{id:"what-is-migration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-migration"}},[t._v("#")]),t._v(" What is migration?")]),t._v(" "),e("p",[t._v("In case you have no idea about what migrations are, think of it as a version control (like "),e("a",{attrs:{href:"https://git-scm.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git"),e("OutboundLink")],1),t._v(") for your database. Let's say you're working with your team. Suddenly, you realised that your "),e("code",[t._v("users")]),t._v(" table is missing an "),e("code",[t._v("email")]),t._v(" column. At this point, you might say "),e("em",[t._v('"Well, I just need to tell all my friends to run this SQL query on their database so that the code will work!"')]),t._v(", right?")]),t._v(" "),e("p",[t._v("Well, the problem is that this thing can happen all the time, whether you're working on a small exercise project or a large-scale enterprise project. This is why you need to consider using migrations. When someone wants to change something on the database, all they have to do is add a new migration which will perform queries to the database.")]),t._v(" "),e("p",[t._v("The cool thing about this feature is not only you can "),e("strong",[t._v("apply")]),t._v(" new migrations, but also "),e("strong",[t._v("rollback")]),t._v(" to the previous versions of your database. This is very helpful for debugging or downgrading your app when something went wrong.")]),t._v(" "),e("h2",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),e("p",[t._v("The first thing you need to do is install the Cotton CLI.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ deno install --allow-net --allow-read --allow-write -n cotton https://deno.land/x/cotton@v0.7.2/cli.ts\n")])])]),e("p",[t._v("Once the installation is finished, you can type "),e("code",[t._v("cotton")]),t._v(" in your terminal to verify your installation.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ cotton\n\nCotton CLI v0.1.0\n\nUsage:\n  cotton [command] [options]\n\n\nOptions:\n  -h, --help\n    Prints help information\n  -c, --config\n    Set the location of your database configuration (default: "ormconfig.json")\n\n\nCommands:\n  migration:create  Creates a new migration file\n  migration:up      Apply all available migrations\n  migration:down    Revert the last "batch" migrations\n  migration:info    Get the status of all migrations\n')])])]),e("p",[t._v("As you can see, we have a bunch of commands which we can use to manage our migrations. Let's start by creating a new migration file.")]),t._v(" "),e("h2",{attrs:{id:"creating-a-migration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-migration"}},[t._v("#")]),t._v(" Creating a migration")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cotton migration:create --name CreateUserTable\n")])])]),e("p",[t._v("This will create a "),e("code",[t._v("migrations/")]),t._v(" folder inside your current directory which contains your migration files. Each of those files has it's own timestamp which helps us determine the right execution order of those migrations.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ tree migrations\nmigrations\n└── 20200717134438_CreateUserTable.ts\n")])])]),e("p",[t._v("Let's take a look at what's inside that migration file.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Schema "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://deno.land/x/cotton/mod.ts"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("up")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schema"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("down")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schema"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The code is very straight forward. We have an "),e("code",[t._v("up")]),t._v(" function to "),e("strong",[t._v("apply")]),t._v(" this migration to the database, and a "),e("code",[t._v("down")]),t._v(" function to "),e("strong",[t._v("revert")]),t._v(" it back to the previous version.")]),t._v(" "),e("p",[t._v("To apply existing migrations, all you have to do is run "),e("code",[t._v("cotton migration:up")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cotton migration:up\n\nMigrating: 20200717134438_CreateUserTable\nMigrated:  20200717134438_CreateUserTable\n")])])]),e("p",[t._v("Going back to the previous version of your database super easy.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cotton migration:down\n\nReverting: 20200717134438_CreateUserTable\nReverted:  20200717134438_CreateUserTable\n")])])]),e("p",[t._v('By default, this will revert the last migration "batch", which can be consists of multiple migrations. However, you can specify how many migrations you want to revert by passing the '),e("code",[t._v("--steps")]),t._v(" option.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cotton migration:down --steps 1\n")])])]),e("h2",{attrs:{id:"migration-info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#migration-info"}},[t._v("#")]),t._v(" Migration info")]),t._v(" "),e("p",[t._v("You can see all of your available migrations via "),e("code",[t._v("migration:info")]),t._v(" command. This will print out every single migrations and check whether it's already applied to the database or not.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Applied  Migration\n-------  ------------------------------\nYes      20200717134438_CreateUserTable\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);